[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "pace-construction-estimating"
version = "1.0.0"
description = "Intelligent Construction Estimating Platform - Project Analysis & Construction Estimating"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "PACE Development Team", email = "support@pace-construction.com"}
]
maintainers = [
    {name = "Squires Lumber", email = "support@pace-construction.com"}
]
keywords = ["construction", "estimating", "bidding", "project-analysis", "caltrans", "dot"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Construction Industry",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Office/Business :: Financial :: Accounting",
    "Topic :: Scientific/Engineering :: Information Analysis",
]
requires-python = ">=3.8"
dependencies = [
    "streamlit>=1.28.0",
    "pandas>=2.0.0",
    "openpyxl>=3.1.0",
    "plotly>=5.0.0",
    "pdfplumber>=0.9.0",
    "fuzzywuzzy>=0.18.0",
    "python-levenshtein>=0.20.0",
    "Pillow>=9.0.0",
    "jinja2>=3.1.0",
    "matplotlib>=3.5.0",
    "seaborn>=0.11.0",
    "pydantic>=2.0.0",
    "loguru>=0.7.0",
    "click>=8.0.0",
    "rich>=13.0.0",
    "typer>=0.9.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]
docs = [
    "sphinx>=6.0.0",
    "sphinx-rtd-theme>=1.2.0",
    "myst-parser>=1.0.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "pytest-asyncio>=0.21.0",
]

[project.urls]
Homepage = "https://pace-construction.com"
Documentation = "https://docs.pace-construction.com"
Repository = "https://github.com/your-org/pace-construction-estimating"
"Bug Tracker" = "https://github.com/your-org/pace-construction-estimating/issues"
"Discussions" = "https://github.com/your-org/pace-construction-estimating/discussions"

[project.scripts]
pace = "pace.main:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
pace = ["py.typed"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["pace"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
] 